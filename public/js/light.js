// Generated by CoffeeScript 1.6.3
(function() {
  var add_sense, add_values, client, get_control, get_message_title, get_options, get_parametered_input, get_tile;

  window._id = 0;

  window._act = function(dest, key) {
    return window._pub(dest.replace(/\/values/, ''), key);
  };

  get_tile = function(dest, key, value) {
    return "<div class='tiles' style='display: inline;'><div class=    'small tile'><i class='icon-" + value['icon'] + "' onclick='    window._act(\"" + dest + "\", \"" + key + "\");'></i></div></div>";
  };

  get_options = function(v) {
    var i;
    return [
      (function() {
        var _i, _ref, _ref1, _results;
        _results = [];
        for (i = _i = _ref = v['start'], _ref1 = v['end']; _ref <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = _ref <= _ref1 ? ++_i : --_i) {
          if (i % v.step === 0) {
            _results.push("<option value='" + i + "' " + (v['default'] === i ? "selected=selected" : void 0) + "    >" + i + "</option>");
          }
        }
        return _results;
      })()
    ].join("\n");
  };

  window._get_values = function(id) {
    var c, result, _i, _len, _ref;
    result = {};
    _ref = $('#' + id).children();
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      c = _ref[_i];
      result[c.name] = c.value;
    }
    return JSON.stringify(result);
  };

  get_parametered_input = function(dest, key, value) {
    var k, str, v;
    str = "<form  id='" + window._id + "'>";
    str += ((function() {
      var _ref, _results;
      _ref = value["parameters"];
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        switch (v.type) {
          case "string":
            _results.push("<input placeholder='" + k + "' name='" + k + "' value='" + (v["default"] != null ? v["default"] : '') + "'/>");
            break;
          case "range":
            _results.push("<select class='modal button green' name='" + k + "'>" + (get_options(v)) + "</select>");
            break;
          default:
            _results.push(void 0);
        }
      }
      return _results;
    })()).join(" ");
    str += "</form><input type='button' onclick='window._act(\"" + dest + "\",    \"" + key + " \" + window._get_values(" + window._id + "))' value='" + key + "'>";
    window._id++;
    return str;
  };

  get_control = function(dest, key, value) {
    if (value['parameters'] != null) {
      return get_parametered_input(dest, key, value);
    } else {
      return get_tile(dest, key, value);
    }
  };

  get_message_title = function(msg) {
    return "<h3>" + (msg.destinationName.replace('/home/actuators/([^/]+)/values', '$1')) + "</h3>";
  };

  add_values = function(msg) {
    var k, v;
    console.log(msg.payloadString);
    console.log($.parseJSON(msg.payloadString));
    return $("#content").append("" + (get_message_title(msg)) + "        " + (((function() {
      var _ref, _results;
      _ref = $.parseJSON(msg.payloadString);
      _results = [];
      for (k in _ref) {
        v = _ref[k];
        _results.push(get_control(msg.destinationName, k, v));
      }
      return _results;
    })()).join(" ")) + "<br/>");
  };

  add_sense = function(msg) {
    var element, id, payload, _id;
    payload = $.parseJSON(msg.payloadString);
    _id = "sense_" + (msg.destinationName.replace(/\//g, "_"));
    id = "#" + _id;
    element = $(id);
    if (!element.length) {
      console.log("adding element");
      $("#content").append("" + (get_message_title(msg)) + "<div id='" + _id + "'></div>");
      element = $(id);
    }
    return element.html("" + (payload.join("<br/>")));
  };

  window._pub = function(topic, str) {
    var message;
    console.log(str);
    message = new Messaging.Message(str);
    message.destinationName = topic;
    return window._cli.send(message);
  };

  client = new Messaging.Client("192.168.0.11", 8080, "clientId");

  window._cli = client;

  client.onConnectionLost = function(response) {
    return console.log(response);
  };

  client.onMessageArrived = function(message) {
    if (/\/values/.test(message.destinationName)) {
      return add_values(message);
    } else if (/\/sensors\//.test(message.destinationName)) {
      return add_sense(message);
    }
  };

  client.connect({
    onSuccess: function() {
      client.subscribe("/home/actuators/#");
      client.subscribe("/home/sensors/#");
      return window._pub("/home/actuators", "list");
    },
    onFailure: function(e) {
      return console.log(e);
    }
  });

}).call(this);
